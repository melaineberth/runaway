// lib/core/services/app_initialization_service.dart

import 'package:runaway/core/services/reverse_geocoding_service.dart';

/// Service pour initialiser les diff√©rents composants de l'application au d√©marrage
class AppInitializationService {
  
  /// Initialise tous les services n√©cessaires au d√©marrage de l'application
  static Future<void> initialize() async {
    print('üöÄ Initialisation des services de l\'application...');
      
    // Nettoyer le cache de g√©ocodage expir√©
    await _cleanupReverseGeocodingCache();
    
    print('‚úÖ Initialisation des services termin√©e');
  }
    
  /// üÜï Nettoie le cache de reverse geocoding
  static Future<void> _cleanupReverseGeocodingCache() async {
    try {
      await ReverseGeocodingService.cleanExpiredCache();
      print('‚úÖ Cache de g√©ocodage nettoy√©');
    } catch (e) {
      print('‚ùå Erreur nettoyage cache g√©ocodage: $e');
      // Non bloquant, l'app peut continuer
    }
  }
  
  /// V√©rifie si tous les services sont correctement configur√©s
  static Future<bool> checkServicesHealth() async {
    bool allHealthy = true;
    
    // V√©rifier Supabase
    try {
      // Test basique de connectivit√© Supabase
      // await Supabase.instance.client.auth.getUser();
      print('‚úÖ Supabase accessible');
    } catch (e) {
      print('‚ö†Ô∏è Probl√®me avec Supabase: $e');
      allHealthy = false;
    }
    
    return allHealthy;
  }
}