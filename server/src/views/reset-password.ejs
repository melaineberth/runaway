<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Réinitialiser votre mot de passe - Trailix</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        
        .container {
            background: white;
            border-radius: 16px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            padding: 40px;
            width: 100%;
            max-width: 400px;
            animation: slideIn 0.3s ease-out;
        }
        
        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .logo {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .logo h1 {
            color: #667eea;
            font-size: 32px;
            font-weight: 700;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            color: #374151;
            font-weight: 500;
        }
        
        input[type="password"] {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s ease;
        }
        
        input[type="password"]:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        
        .password-requirements {
            background: #f9fafb;
            border-radius: 6px;
            padding: 12px;
            margin-top: 8px;
            font-size: 12px;
            color: #6b7280;
        }
        
        .requirement {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
            padding: 4px 0;
            transition: all 0.3s ease;
        }
        
        .requirement .icon {
            width: 16px;
            height: 16px;
            margin-right: 8px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
            font-weight: bold;
            background: #e5e7eb;
            color: #6b7280;
        }
        
        .requirement.valid .icon {
            background: #10b981;
            color: white;
        }
        
        .requirement.invalid .icon {
            background: #ef4444;
            color: white;
        }
        
        .submit-btn {
            width: 100%;
            background: #667eea;
            color: white;
            border: none;
            padding: 14px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .submit-btn:hover:not(:disabled) {
            background: #5a67d8;
            transform: translateY(-1px);
        }
        
        .submit-btn:disabled {
            background: #9ca3af;
            cursor: not-allowed;
        }
        
        .submit-btn.ready {
            background: #10b981;
        }
        
        .error-message, .success-message {
            padding: 12px;
            border-radius: 6px;
            margin-bottom: 20px;
            display: none;
        }
        
        .error-message {
            background: #fef2f2;
            border: 1px solid #fecaca;
            color: #dc2626;
        }
        
        .success-message {
            background: #f0fdf4;
            border: 1px solid #bbf7d0;
            color: #166534;
        }
        
        .loading {
            display: none;
            text-align: center;
            color: #6b7280;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="logo">
            <h1>Trailix</h1>
        </div>
        
        <% if (error) { %>
            <div class="error-message" style="display: block;">
                <%= error %>
            </div>
        <% } %>
        
        <div id="error-message" class="error-message"></div>
        <div id="success-message" class="success-message"></div>
        
        <form id="reset-form">
            <div class="form-group">
                <label for="password">Nouveau mot de passe</label>
                <input type="password" id="password" name="password" required autocomplete="new-password">
            </div>
            
            <div class="form-group">
                <label for="confirmPassword">Confirmer le mot de passe</label>
                <input type="password" id="confirmPassword" name="confirmPassword" required autocomplete="new-password">
            </div>
            
            <div class="password-requirements">
                <div class="requirement" id="req-length">
                    <div class="icon">○</div>
                    <span>Au moins 8 caractères</span>
                </div>
                <div class="requirement" id="req-uppercase">
                    <div class="icon">○</div>
                    <span>Une majuscule (A-Z)</span>
                </div>
                <div class="requirement" id="req-lowercase">
                    <div class="icon">○</div>
                    <span>Une minuscule (a-z)</span>
                </div>
                <div class="requirement" id="req-number">
                    <div class="icon">○</div>
                    <span>Un chiffre (0-9)</span>
                </div>
                <div class="requirement" id="req-special">
                    <div class="icon">○</div>
                    <span>Un caractère spécial (!@#$...)</span>
                </div>
                <div class="requirement" id="req-match">
                    <div class="icon">○</div>
                    <span>Les mots de passe correspondent</span>
                </div>
            </div>
            
            <button type="submit" class="submit-btn" id="submit-btn" disabled>
                Réinitialiser le mot de passe
            </button>
        </form>
        
        <div class="loading" id="loading">
            <p>Mise à jour de votre mot de passe...</p>
        </div>
    </div>

    <script>
        // Configuration depuis le serveur
        const config = {
            accessToken: '<%= accessToken %>',
            refreshToken: '<%= refreshToken %>',
            apiUrl: '/api/auth/update-password'
        };
        
        const form = document.getElementById('reset-form');
        const passwordInput = document.getElementById('password');
        const confirmPasswordInput = document.getElementById('confirmPassword');
        const submitBtn = document.getElementById('submit-btn');
        const errorMessage = document.getElementById('error-message');
        const successMessage = document.getElementById('success-message');
        const loading = document.getElementById('loading');
        
        function validatePassword() {
            const password = passwordInput.value;
            const confirmPassword = confirmPasswordInput.value;
            
            const requirements = {
                length: password.length >= 8,
                uppercase: /[A-Z]/.test(password),
                lowercase: /[a-z]/.test(password),
                number: /[0-9]/.test(password),
                special: /[!@#$%^&*(),.?":{}|<>]/.test(password),
                match: password === confirmPassword && password.length > 0 && confirmPassword.length > 0
            };
            
            Object.keys(requirements).forEach(req => {
                const element = document.getElementById(`req-${req}`);
                const icon = element.querySelector('.icon');
                
                if (req === 'match') {
                    if (confirmPassword.length === 0) {
                        element.className = 'requirement';
                        icon.textContent = '○';
                    } else if (requirements[req]) {
                        element.className = 'requirement valid';
                        icon.textContent = '✓';
                    } else {
                        element.className = 'requirement invalid';
                        icon.textContent = '✗';
                    }
                } else {
                    if (requirements[req]) {
                        element.className = 'requirement valid';
                        icon.textContent = '✓';
                    } else if (password.length > 0) {
                        element.className = 'requirement invalid';
                        icon.textContent = '✗';
                    } else {
                        element.className = 'requirement';
                        icon.textContent = '○';
                    }
                }
            });
            
            const allValid = Object.values(requirements).every(Boolean);
            submitBtn.disabled = !allValid;
            
            if (allValid) {
                submitBtn.classList.add('ready');
                submitBtn.textContent = '✓ Réinitialiser le mot de passe';
            } else {
                submitBtn.classList.remove('ready');
                submitBtn.textContent = 'Réinitialiser le mot de passe';
            }
            
            return allValid;
        }
        
        passwordInput.addEventListener('input', validatePassword);
        confirmPasswordInput.addEventListener('input', validatePassword);
        
        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            if (!validatePassword()) return;
            
            const password = passwordInput.value;
            
            if (!config.accessToken) {
                showError('Lien de réinitialisation invalide ou expiré');
                return;
            }
            
            form.style.display = 'none';
            loading.style.display = 'block';
            
            try {
                const response = await fetch(config.apiUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        access_token: config.accessToken,
                        refresh_token: config.refreshToken,
                        new_password: password
                    })
                });
                
                const result = await response.json();
                
                if (response.ok && result.success) {
                    showSuccess('Mot de passe mis à jour avec succès ! Redirection...');
                    setTimeout(() => {
                        window.location.href = 'trailix://auth/password-reset-success';
                    }, 2000);
                } else {
                    throw new Error(result.error || 'Erreur lors de la mise à jour');
                }
            } catch (error) {
                console.error('Erreur:', error);
                showError(error.message || 'Une erreur est survenue');
                form.style.display = 'block';
                loading.style.display = 'none';
            }
        });
        
        function showError(message) {
            errorMessage.textContent = message;
            errorMessage.style.display = 'block';
            successMessage.style.display = 'none';
        }
        
        function showSuccess(message) {
            successMessage.textContent = message;
            successMessage.style.display = 'block';
            errorMessage.style.display = 'none';
        }
        
        // Focus automatique
        document.addEventListener('DOMContentLoaded', function() {
            passwordInput.focus();
        });
    </script>
</body>
</html>